import ccxt
import time

# Initialize exchange (e.g., Binance)
exchange = ccxt.binance({
    'apiKey': 'your_api_key',
    'secret': 'your_secret_key',
})

# Define trading strategy
def simple_moving_average_strategy(symbol, period, ma_length):
    # Fetch historical data
    bars = exchange.fetch_ohlcv(symbol, timeframe=period, limit=ma_length)
    
    # Calculate Simple Moving Average (SMA)
    closes = [bar[4] for bar in bars]
    sma = sum(closes) / len(closes)
    
    # Fetch current price
    current_price = exchange.fetch_ticker(symbol)['last']
    
    # Decision logic
    if current_price > sma:
        # Buy signal
        print("Buy signal")
        order = exchange.create_market_buy_order(symbol, 0.01)  # Modify quantity as needed
    elif current_price < sma:
        # Sell signal
        print("Sell signal")
        order = exchange.create_market_sell_order(symbol, 0.01)  # Modify quantity as needed

# Main loop
while True:
    try:
        simple_moving_average_strategy('BTC/USDT', '1m', 14)
        time.sleep(60)  # Wait 60 seconds before next execution
    except Exception as e:
        print(f"An error occurred: {e}")
        time.sleep(60)
